***(
  Sampler
  Definition of functions for probabilistic sampling. This file is a modified 
  version of the one available for PMAude
***)

mod SAMPLER is
  pr RANDOM .
  pr COUNTER .
  pr CONVERSION .

  --- pick a random number from [0,4294967296]
  op rand : -> Nat .
  rl rand => random(counter) .

  --- pick a random number from [0.0,1.0]
  op randFloat : -> Float .
  rl randFloat => float(random(counter) / 4294967296) .

  vars R : Float .
  vars Max Min : Nat .

  --- Bernoulli with probability R (R in [0.0,1.0])
  op sampleBerWithP : Float -> Bool .
  eq sampleBerWithP(R) = if randFloat < R then true else false fi . 

  --- Generate a random natural number in interval [Min, Max] 
  op genRandom : Nat Nat -> Nat   .
  eq genRandom(Min, Max) = (rand rem ((Max - Min) + 1)) + Min .

endm